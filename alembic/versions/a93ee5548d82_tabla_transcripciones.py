"""tabla transcripciones

Revision ID: a93ee5548d82
Revises: d46ca1588864
Create Date: 2025-08-05 20:06:01.464418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a93ee5548d82'
down_revision: Union[str, Sequence[str], None] = 'd46ca1588864'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('etiquetas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('producto_tipos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('descripcion', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('telegram_transcripciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('texto', sa.String(), nullable=True),
    sa.Column('procesado', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telegram_transcripciones_id'), 'telegram_transcripciones', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_transcripciones_message_id'), 'telegram_transcripciones', ['message_id'], unique=True)
    op.create_table('producto_etiquetas',
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.Column('etiqueta_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['etiqueta_id'], ['etiquetas.id'], ),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], )
    )
    op.add_column('productos', sa.Column('tipo_id', sa.Integer(), nullable=True))
    op.add_column('productos', sa.Column('stock_alerta', sa.Integer(), nullable=True))
    op.add_column('productos', sa.Column('precio_unitario', sa.Float(), nullable=True))
    op.add_column('productos', sa.Column('tiempo_impresion', sa.Float(), nullable=True))
    op.add_column('productos', sa.Column('costo_produccion', sa.Float(), nullable=True))
    op.add_column('productos', sa.Column('gramos', sa.Integer(), nullable=True))
    op.add_column('productos', sa.Column('foto_url', sa.String(), nullable=True))
    op.add_column('productos', sa.Column('notas', sa.String(), nullable=True))
    op.add_column('productos', sa.Column('fecha_creacion', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'productos', 'producto_tipos', ['tipo_id'], ['id'])
    op.drop_column('productos', 'nombre')
    op.drop_column('productos', 'precio')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('productos', sa.Column('precio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('productos', sa.Column('nombre', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'productos', type_='foreignkey')
    op.drop_column('productos', 'fecha_creacion')
    op.drop_column('productos', 'notas')
    op.drop_column('productos', 'foto_url')
    op.drop_column('productos', 'gramos')
    op.drop_column('productos', 'costo_produccion')
    op.drop_column('productos', 'tiempo_impresion')
    op.drop_column('productos', 'precio_unitario')
    op.drop_column('productos', 'stock_alerta')
    op.drop_column('productos', 'tipo_id')
    op.drop_table('producto_etiquetas')
    op.drop_index(op.f('ix_telegram_transcripciones_message_id'), table_name='telegram_transcripciones')
    op.drop_index(op.f('ix_telegram_transcripciones_id'), table_name='telegram_transcripciones')
    op.drop_table('telegram_transcripciones')
    op.drop_table('producto_tipos')
    op.drop_table('etiquetas')
    # ### end Alembic commands ###
